name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    strategy:
      matrix:
        config: [
          { target: android, os: ubuntu-latest, tasks: testDebugUnitTest testReleaseUnitTest, continueOnError: false },
          { target: apple, os: macos-latest, tasks: iosX64Test iosSimulatorArm64Test macosX64Test macosArm64Test tvosX64Test tvosSimulatorArm64Test watchosX64Test watchosSimulatorArm64Test, continueOnError: false },
          { target: js, os: ubuntu-latest, tasks: jsTest wasmJsTest, continueOnError: false },
          { target: desktop, os: ubuntu-latest, tasks: jvmTest, continueOnError: false },
          { target: windows, os: windows-latest, tasks: mingwX64Test, continueOnError: false },
        ]
    runs-on: ${{ matrix.config.os }}
    name: Build ${{ matrix.config.target }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2

      - name: Test ${{ matrix.config.target }} targets
        continue-on-error: ${{ matrix.config.continueOnError }}
        run: ./gradlew ${{ matrix.config.tasks }} --info
        working-directory: ${{ github.workspace }}

  release:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: macos-latest
    needs:
      - build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2

      - name: Setup Pages
        uses: actions/configure-pages@v3

      #      - name: Write secrets to local.properties
      #        if: ${{ github.event_name != 'pull_request' }}
      #        run: |
      #          echo mavenCentralUsername="${MAVEN_USERNAME}" >> "local.properties"
      #          echo mavenCentralUsername="${MAVEN_PASSWORD}" >> "local.properties"
      #          echo gpgKeyPassword="${GPG_KEY_PASSWORD}" >> "local.properties"
      #          echo gpgKeySecret="${GPG_KEY_SECRET}" >> "local.properties"
      #        env:
      #          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
      #          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
      #          GPG_KEY_PASSWORD: ${{ secrets.GPG_KEY_PASSWORD }}
      #          GPG_KEY_SECRET: ${{ secrets.GPG_KEY_SECRET }}

      #      - name: Release to sonatype
      #        run: ./gradlew publishAllPublicationsToMavenRepository

      - name: Generate docs with dokka
        run: ./gradlew dokkaHtmlMultiModule

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ github.workspace }}/build/dokka/htmlMultiModule

      - name: Release to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
